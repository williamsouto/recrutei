openapi: 3.0.0
info:
  title: 'Recrutei Api'
  description: 'User registration, permissions and cars api'
  contact:
    url: 'https://www.linkedin.com/in/william-souto-180004a6/'
  version: 1.0.0
servers:
  -
    url: 'http://recrutei.test'
paths:
  /api/register:
    post:
      tags:
        - Authentication
      summary: 'Register a user'
      description: 'Returns infos of token access'
      operationId: register
      requestBody:
        description: 'Object that needs to be added to the store'
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - name
                - email
                - password
              properties:
                name:
                  description: 'Name of the user'
                  type: string
                email:
                  description: 'Email of the user'
                  type: string
                password:
                  description: 'Password of the user'
                  type: string
              type: object
      responses:
        201:
          description: Created
        422:
          description: 'Unprocessable Entity'
  /api/login:
    post:
      tags:
        - Authentication
      summary: Login
      description: 'Returns infos of token access'
      operationId: login
      requestBody:
        description: 'Object that needs to be added to the login'
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: integer
              type: object
      responses:
        200:
          description: Ok
        422:
          description: 'Unprocessable Entity'
  /api/users:
    put:
      tags:
        - User
      summary: 'Update user'
      description: 'Returns data user'
      operationId: update
      requestBody:
        description: 'Object that needs to be added to the update'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: integer
              type: object
      responses:
        200:
          description: OK
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
      security:
        -
          bearer:
            - list-car
  /api/cars:
    get:
      tags:
        - Car
      summary: 'Lists all cars created'
      description: 'Return all cars created'
      operationId: index
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - list-car
    post:
      tags:
        - Car
      summary: Save
      description: 'Save a car with the data informed'
      operationId: store
      requestBody:
        description: 'Object that needs to be added to the car'
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - model
                - category
                - motor_power
                - ports
                - board
                - type_vehicle
                - year
                - fuel
                - mileage
                - exchange
                - direction
                - color
              properties:
                model:
                  type: string
                category:
                  type: string
                motor_power:
                  type: string
                ports:
                  type: integer
                board:
                  type: string
                type_vehicle:
                  type: string
                year:
                  type: string
                fuel:
                  type: string
                mileage:
                  type: string
                exchange:
                  type: string
                direction:
                  type: string
                color:
                  type: string
                options:
                  type: string
              type: object
      responses:
        201:
          description: Created
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - create-car
  '/api/cars/{id}':
    get:
      tags:
        - Car
      summary: 'Lists all cars created by filter'
      description: 'Return all cars created'
      operationId: show
      parameters:
        -
          name: id
          in: path
          description: 'Id of the car'
          required: true
          schema:
            type: integer
            default: available
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - list-car
    put:
      tags:
        - Car
      summary: 'Update car'
      description: 'Returns data car'
      operationId: update
      parameters:
        -
          name: id
          in: path
          description: 'Id of the car'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Object that needs to be update to the car'
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - model
                - category
                - motor_power
                - ports
                - board
                - type_vehicle
                - year
                - fuel
                - mileage
                - exchange
                - direction
                - color
              properties:
                model:
                  type: string
                category:
                  type: string
                motor_power:
                  type: string
                ports:
                  type: integer
                board:
                  type: string
                type_vehicle:
                  type: string
                year:
                  type: string
                fuel:
                  type: string
                mileage:
                  type: string
                exchange:
                  type: string
                direction:
                  type: string
                color:
                  type: string
                options:
                  type: string
              type: object
      responses:
        200:
          description: OK
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - update-car
    delete:
      tags:
        - Car
      summary: 'Deletes a car'
      operationId: destroy
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - delete-car
  /api/roles:
    get:
      tags:
        - Role
      summary: 'Lists all roles created'
      description: 'Return all roles created'
      operationId: index
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - manager
    post:
      tags:
        - Role
      summary: 'Save role'
      description: 'Save a role with the data informed'
      operationId: store
      requestBody:
        description: 'Object that needs to be added to the role'
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - user_id
                - role
              properties:
                user_id:
                  type: integer
                role:
                  type: string
              type: object
      responses:
        201:
          description: Created
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - manager
  '/api/roles/{id}/{role}':
    get:
      tags:
        - Role
      summary: 'Lists all roles created by filter'
      description: 'Return all roles created'
      operationId: show
      parameters:
        -
          name: id
          in: path
          description: 'Id of the user'
          required: true
          schema:
            type: integer
        -
          name: role
          in: path
          description: 'Name of the role'
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - manager
    delete:
      tags:
        - Role
      summary: 'Delete a role'
      operationId: destroy
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
        -
          name: role
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        422:
          description: 'Unprocessable Entity'
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - manager
  '/api/roles/{id}':
    get:
      tags:
        - Role
      summary: 'Lists all roles created to the user'
      description: 'Return all roles created'
      operationId: showRoles
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
        403:
          description: Forbidden
      security:
        -
          bearer:
            - manager
components:
  securitySchemes:
    bearer:
      type: oauth2
      description: 'Use a global client_id / client_secret and your username / password combo to obtain a token'
      in: header
      flows:
        password:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          refreshUrl: /oauth/token/refresh
          scopes:
            manager: 'All Privileges'
            list-car: 'List the cars'
            create-car: 'Create a car'
            update-car: 'Update a car'
            delete-car: 'Delete a car'
      bearerFormat: JWT
      scheme: bearer
    passport:
      type: oauth2
      description: 'Laravel passport oauth2 security.'
      in: header
      scheme: https
      flows:
        password:
          authorizationUrl: 'http://recrutei.test/oauth/authorize'
          tokenUrl: 'http://recrutei.test/oauth/token'
          refreshUrl: 'http://recrutei.test/token/refresh'
          scopes: {  }
externalDocs:
  description: 'Find out more about Swagger'
  url: 'https://www.swagger.io'
